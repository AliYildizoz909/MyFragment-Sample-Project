@using MyFragment.UI.Models
@using MyFragment.Entities.Entity
@model MyFragment.Entities.Entity.User

@{
    ViewBag.Title = "Düzenle";
}

<div class="container mb-5">
    <div class="row">
        <div class="col-12">
            <h2 class="mt-5">Kullanıcı Düzenle</h2>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(I => I.Id)

                <div class="container">

                    <div class="row">
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <div class="col-md-10 text-center">
                                    <img src="~/img/UserPhotos/@Model.ImagePath" id="imgshow" width="180" height="250" />
                                    <div class="col-md-12 offset-md-3">
                                        <br />
                                        <input type="file" id="fileId" name="ImagePath" value="" class="form-control-file d-inline btn-sm" />
                                        @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.ValidationSummary((bool)TempData["key"], "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <b>@Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })</b>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <b>@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })</b>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <b>@Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })</b>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <b>@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })</b>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <b>@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })</b>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <b>@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })</b>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <b>@Html.LabelFor(model => model.UserState, htmlAttributes: new { @class = "control-label col-md-2" })</b>
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.UserState, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UserState, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 offset-md-2">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @HelperMethod.IconButton("submit", "save", "btn-warning mr-1", "Kaydet")
                                    @HelperMethod.IconLink(Url.Action("Index"), "arrow-circle-left", "btn-secondary", "Listeye dön")
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

<script src="~/Scripts/imagePath.js"></script>
